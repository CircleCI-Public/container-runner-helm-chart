suite: test deployment
templates:
  - deployment.yaml
tests:
  - it: should work
    set:
      agent.image.tag: kubernetes-edge
    asserts:
      - isKind:
          of: Deployment
      - matchRegex:
          path: metadata.name
          pattern: RELEASE-NAME-container-agent
      - equal:
          path: spec.template.spec.containers[0].image
          value: circleci/runner-agent:kubernetes-edge

  - it: should set the pull secrets if they are present
    set:
      agent.pullSecrets: ["secret", "1"]
    asserts:
      - equal:
          path: spec.template.spec.imagePullSecrets
          value:
            - name: "secret"
            - name: "1"

  - it: should have the default logging collector configuration
    asserts:
      - contains:
          path: spec.template.spec.containers[0].env
          content:
            name: KUBE_LOGGING_IMAGE
            value: "circleci/logging-collector:3"
      - contains:
          path: spec.template.spec.containers[0].env
          content:
            name: KUBE_LOGGING_SECRET
            value: "logging-collector-token"
  - it: should override the default logging collector configuration
    set:
      logging.image.registry: foo
      logging.image.repository: bar
      logging.image.tag: baz
      logging.serviceAccount.secret.name: my-custom-secret
    asserts:
      - contains:
          path: spec.template.spec.containers[0].env
          content:
            name: KUBE_LOGGING_IMAGE
            value: "foo/bar:baz"
      - contains:
          path: spec.template.spec.containers[0].env
          content:
            name: KUBE_LOGGING_SECRET
            value: "my-custom-secret"

  - it: should override the default garbage collection settings
    set:
      agent.gc.enabled: false
      agent.gc.threshold: "1h"
      agent.gc.interval: "10m"
    asserts:
      - contains:
          path: spec.template.spec.containers[0].env
          content:
            name: KUBE_GC_ENABLED
            value: "false"
      - contains:
          path: spec.template.spec.containers[0].env
          content:
            name: KUBE_GC_THRESHOLD
            value: "1h"
      - contains:
          path: spec.template.spec.containers[0].env
          content:
            name: KUBE_GC_INTERVAL
            value: "10m"
  - it: should support older garbage collection settings
    set:
      agent.kubeGCEnabled: false
      agent.kubeGCThreshold: "1h"
    asserts:
      - contains:
          path: spec.template.spec.containers[0].env
          content:
            name: KUBE_GC_ENABLED
            value: "false"
      - contains:
          path: spec.template.spec.containers[0].env
          content:
            name: KUBE_GC_THRESHOLD
            value: "1h"

  - it: should set environment variables provided in agent.environment
    template: templates/deployment.yaml
    set:
      agent.environment.FOO: BAR
      agent.environment.BAZ: QUX
    asserts:
      - hasDocuments:
          count: 1
      - isKind:
          of: Deployment
      - contains:
          path: spec.template.spec.containers[0].env
          content:
            name: "FOO"
            value: "BAR"
      - contains:
          path: spec.template.spec.containers[0].env
          content:
            name: "BAZ"
            value: "QUX"

  - it: should override the default log settings
    set:
      agent.log.level: "debug"
      agent.log.format: "text"
    asserts:
      - contains:
          path: spec.template.spec.containers[0].env
          content:
            name: O11Y_LEVEL
            value: "debug"
      - contains:
          path: spec.template.spec.containers[0].env
          content:
            name: O11Y_FORMAT
            value: "text"
  - it: should support older log level setting
    set:
      agent.loggingLevel: "error"
    asserts:
      - contains:
          path: spec.template.spec.containers[0].env
          content:
            name: O11Y_LEVEL
            value: "error"
            
  - it: should have proxy configured if given
    set:
      proxy.enabled: true
      proxy.http.host: proxy.test.com
      proxy.http.port: 3128
      proxy.https.host: proxy.test.com
      proxy.https.port: 3128
      proxy.no_proxy: [ "localhost", "abcd.server.com"]
    asserts:
      - contains:
          path: spec.template.spec.containers[0].env
          content:
            name: HTTP_PROXY
            value: http://proxy.test.com:3128
      - contains:
          path: spec.template.spec.containers[0].env
          content:
            name: HTTPS_PROXY
            value: http://proxy.test.com:3128
      - contains:
          path: spec.template.spec.containers[0].env
          content:
            name: NO_PROXY
            value: "localhost,abcd.server.com,svc.cluster.local"   
      - contains:
          path: spec.template.spec.containers[0].env
          content:
            name: http_proxy
            value: http://proxy.test.com:3128
      - contains:
          path: spec.template.spec.containers[0].env
          content:
            name: https_proxy
            value: http://proxy.test.com:3128
      - contains:
          path: spec.template.spec.containers[0].env
          content:
            name: no_proxy
            value: "localhost,abcd.server.com,svc.cluster.local"
