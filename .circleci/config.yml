version: 2.1

orbs:
  slack: circleci/slack@4.12.5

workflows:
  main-workflow:
    jobs:
      - validate
      - check_readme
      - package

      - approve-publish:
          type: approval
          filters:
            branches:
              only: [ main ]
          requires: [ validate, package ]
      - publish:
          context: runner-deploy
          requires: [ approve-publish ]

executors:
  helm:
    docker:
      - image: cimg/deploy:2023.09
  ruby:
    docker:
      - image: cimg/ruby:3.2.2

jobs:
  validate:
    executor: helm
    resource_class: medium
    steps:
      - checkout
      - run: helm lint
      - run: helm template --debug .
      - run: ./do unit-tests
      - notify_failing_main

  check_readme:
    docker:
      - image: jnorwood/helm-docs:latest
    resource_class: small
    steps:
      - checkout
      - run:
          name: Install dependencies
          command: apk update && apk add git bash
      - run: ./do generate-readme
      - run:
          name: Check if the README is up to date with any values file changes
          shell: /usr/bin/env bash -euo pipefail
          command: |
            if [[ `git status --porcelain` ]]; then
                echo "There have been changes to 'values.yaml'. Please run the './do generate-readme' command locally and commit the changes."
                git status
                exit 1
            fi
            echo 'Everything is up to date'
      - notify_failing_main

  package:
    executor: helm
    resource_class: medium
    steps:
      - checkout
      - attach_workspace:
          at: .
      - run: ./do package
      - persist_to_workspace:
          root: .
          paths: [ ./target ]
      - notify_failing_main

  publish:
    executor: ruby
    resource_class: medium
    steps:
      - checkout
      - attach_workspace:
          at: .
      - run: ./do check-version-bump
      - run: gem install --no-document package_cloud
      - run: ./do publish
      - notify_slack:
          header: ":helm: :circleci-runner: Container runner Helm chart published"
          version: "$(./do version)"
      - notify_failing_main

commands:
  notify_failing_main:
    steps:
      - slack/notify:
          channel: runner-alerts
          branch_pattern: main
          event: fail
          template: basic_fail_1

  notify_slack:
    parameters:
      header:
        type: string
      version:
        type: string
    steps:
      - run:
          name: Slack Notification
          command: |
            if [ -z "${SLACK_WEBHOOK}" ]; then
              printf "Error: Environment variable SLACK_WEBHOOK is not set\n"
              exit 1
            fi

            curl --fail -H 'Content-type: application/json' --data @<(jq -n \
              --arg project_repo_name "$CIRCLE_PROJECT_REPONAME" \
              --arg user_name "$CIRCLE_USERNAME" \
              --arg build_number "$CIRCLE_BUILD_NUM" \
              --arg build_url "$CIRCLE_BUILD_URL" \
              --arg commit_msg "$(git show -s --format=%s HEAD | jq -R . | sed -e 's/^"//' -e 's/"$//')" \
              --arg version "<< parameters.version >>" \
              '{
                "blocks": [
                  { "type": "header", "text": { "type": "plain_text", "text": "<< parameters.header >>", "emoji": true }},
                  { "type": "section", "fields": [ { "type": "mrkdwn", "text": "*Project:*\n\($project_repo_name)"}, { "type": "mrkdwn", "text": "*Author:*\n\($user_name)"} ] },
                  { "type": "section", "fields": [ { "type": "mrkdwn", "text": "*Version:*\n\($version)"}, { "type": "mrkdwn", "text": "*CircleCI Build:*\n<\($build_url)|\($build_number)>" } ] },
                  { "type": "section", "text": { "type": "mrkdwn", "text": "*Commit Message:*\n\($commit_msg)" } }
                ]
              }') "${SLACK_WEBHOOK}"
